generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  incomes       Income[]
  expenses      Expense[]
  // ★ Category は全ユーザー共通のためリレーションを持たず
  //    SubCategory だけ紐付ける
  subCategories SubCategory[]
}

model Category {
  id            String        @id @default(uuid())
  name          String        @unique
  type          String?
  // ★ Category はユーザー固有の情報を持たず、全体で1つだけ
  subCategories SubCategory[]
  incomes       Income[]
  expenses      Expense[]
}

model SubCategory {
  id         String    @id @default(uuid())
  name       String
  // ★ SubCategory はユーザー固有
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  // ★ どの親カテゴリに属するか
  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  incomes    Income[]
  expenses   Expense[]

  // ユーザー＆カテゴリごとにサブカテゴリ名をユニークにしたい場合
  @@unique([userId, categoryId, name])
}

model Income {
  id            String       @id @default(uuid())
  userId        String
  amount        Int
  date          DateTime
  categoryId    String
  subCategoryId String?
  title         String
  memo          String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  user          User         @relation(fields: [userId], references: [id])
  category      Category     @relation(fields: [categoryId], references: [id])
  subCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
}

model Expense {
  id            String       @id @default(uuid())
  userId        String
  amount        Int
  date          DateTime
  categoryId    String
  subCategoryId String?
  title         String
  memo          String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  user          User         @relation(fields: [userId], references: [id])
  category      Category     @relation(fields: [categoryId], references: [id])
  subCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
}
